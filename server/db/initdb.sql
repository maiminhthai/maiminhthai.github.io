-- SQLite
DROP TABLE IF EXISTS users;
CREATE TABLE IF NOT EXISTS users(
    username TEXT PRIMARY KEY,
    name TEXT NOT NULL,
    role TEXT NOT NULL,
    hash TEXT NOT NULL,
    salt TEXT NOT NULL
);
INSERT INTO users VALUES ('user1', 'Zoey', 'MEMBER', 'e06a2f2073a3d66d1ca4fd6ce04c64fe684ea19c27660b05e2fbf7269ce9ff42', '72e4eeb14def3b21');
INSERT INTO users VALUES ('user2', 'Dantes', 'MEMBER', 'ac28edf49ba34ac83c17145375a030b4579ffddf3fe1dbb68f530bb3ca4ce514', 'a8b618c717683608');
INSERT INTO users VALUES ('user3', 'John', 'MEMBER', '4af3cc8549ccc19af11b711cada4509c4e93c57cca34078c683498ed7bf64258', 'e818f0647b4e1fe0');
INSERT INTO users VALUES ('admin', 'Joe', 'ADMIN', 'ac28edf49ba34ac83c17145375a030b4579ffddf3fe1dbb68f530bb3ca4ce514', 'a8b618c717683608');
SELECT * FROM users;


DROP TABLE IF EXISTS process;
CREATE TABLE IF NOT EXISTS process(
    processId INTEGER PRIMARY KEY AUTOINCREMENT,
    budget INTEGER NOT NULL,
    phase INTEGER CHECK(phase IN (1,2,3)) NOT NULL
);

DROP TABLE IF EXISTS proposals;
CREATE TABLE IF NOT EXISTS proposals(
    proposalId INTEGER PRIMARY KEY AUTOINCREMENT,
    username REFERENCES users(username) ON DELETE CASCADE ON UPDATE CASCADE,
    author TEXT NOT NULL,
    description TEXT NOT NULL,
    cost INTEGER NOT NULL,
    score INTEGER DEFAULT 0,
    approved INTEGER CHECK(approved IN (0,1)) DEFAULT 0
);

DROP TABLE IF EXISTS preferences;
CREATE TABLE IF NOT EXISTS preferences(
    username REFERENCES users(username) ON DELETE CASCADE ON UPDATE CASCADE,
    proposalId REFERENCES proposals(proposalId) ON DELETE CASCADE ON UPDATE CASCADE,
    score INTEGER NOT NULL
);
